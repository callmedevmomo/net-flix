{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Rank.js","Components/Videos.js","Components/Company.js","Components/Collections.js","Components/Profile.js","Components/TVSeasons.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/CollectionPoster.js","Components/Collection.js","Routes/Collections/CollectionsPresenter.js","Routes/Collections/index.js","Routes/Collections/CollectionsContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","dotAnimation","keyframes","Loader_templateObject","Loader_templateObject2","Line","Loader_templateObject3","Loader","Fragment","Loader_Container","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","require","role","aria-label","Poster_Title","length","substr","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upComing","error","loading","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","substring","Components_Message","cotext","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","collection","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","HiddenRank","Rank_templateObject","FullStar","Rank_templateObject2","star","StarState","Rank_templateObject3","StarRank","Rank_templateObject4","Rank","Math","floor","opacity","Videos_templateObject","Videos_templateObject2","VideoBox","Videos_templateObject3","GoUrl","Videos_templateObject4","DesignBox","Videos_templateObject5","DesignSpan","Videos_templateObject6","AwesomeBox","_templateObject7","Video","videos","name","Videos_Container","href","Txt","Company_templateObject","TestBox","Company_templateObject2","BoxContainer","Company_templateObject3","LogoBox","Company_templateObject4","logo","Company_templateObject5","Company","logo_path","origin_country","Company_Container","Collections_templateObject","Collections_templateObject2","Collections_templateObject3","PosterBox","Collections_templateObject4","Collections_templateObject5","Collections","Collections_Container","Collections_TestBox","Collections_BoxContainer","Collections_Txt","Profile_templateObject","Profile_templateObject2","Profile_templateObject3","ProfileBox","Profile_templateObject4","profile","Profile_templateObject5","Profile","credit_id","profile_path","Profile_Container","Profile_TestBox","Profile_BoxContainer","Profile_Txt","TVSeasons_templateObject","TVSeasons_templateObject2","TVSeasons_templateObject3","SeriesBox","TVSeasons_templateObject4","TVSeasons_templateObject5","TVSeasons","air_date","TVSeasons_Container","TVSeasons_TestBox","TVSeasons_BoxContainer","TVSeasons_Txt","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","DetailPresenter_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","FlexContainer","_templateObject11","IMDB","_templateObject12","DetailBox","_templateObject13","CompanyBox","_templateObject14","CompanyTxt","_templateObject15","ProductionCompanies","_templateObject16","Production","_templateObject17","Seasons","Season","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","imdb_id","rel","Components_Rank","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","overview","Videos","production_companies","Components_Company","Object","assign","belongs_to_collection","Components_Collections","created_by","Components_Profile","seasons","Components_TVSeasons","DeatilContainer","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parseId","parseInt","isNaN","console","log","Detail_DetailPresenter","CollectionPoster_templateObject","CollectionPoster_templateObject2","CollectionPoster_templateObject3","CollectionPoster_templateObject4","CollectionPoster_templateObject5","CollectionPoster_templateObject6","CollectionPoster","CollectionPoster_Container","CollectionPoster_ImageContainer","CollectionPoster_Image","CollectionPoster_Rating","CollectionPoster_Title","CollectionPoster_Year","Collection_templateObject","Collection_templateObject2","Collection_templateObject3","Collection_templateObject4","Collection_templateObject5","Collection_templateObject6","Collection_templateObject7","Collection_templateObject8","Collection_templateObject9","Collection_templateObject10","Collection","test","Collection_Container","Collection_Backdrop","Collection_Content","Collection_Cover","Collection_Data","Collection_FlexContainer","Collection_Title","Collection_CompanyTxt","Collection_Overview","Components_CollectionPoster","Conatiner","CollectionsPresenter_templateObject","CollectionsPresenter","collections","Components_Collection","parts","CollectionsContainer","getCollections","Collections_CollectionsPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8744588f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 6px solid\n    ${props => (props.current ? \"#0984e3\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst dotAnimation = keyframes`\n  0% {\n    transform: none;\n  }\n  25% {\n    transform: scale(2);\n  }\n  50% {\n    transform: none;\n  }\n  100% {\n    transform: none;\n  }\n`;\nconst Container = styled.div`\n  width: 1200px;\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 200px;\n  position: fixed;\n  top: 400px;\n  left: 200px;\n`;\nconst Line = styled.div`\n  background-color: #ecf0f1;\n  width: 80px;\n  height: 80px;\n  border-radius: 100px;\n  animation: ${dotAnimation} 1.5s ease-in-out infinite;\n  :nth-child(2) {\n    animation-delay: 0.1s;\n  }\n  :nth-child(3) {\n    animation-delay: 0.2s;\n  }\n  :nth-child(4) {\n    animation-delay: 0.3s;\n  }\n  :nth-child(5) {\n    animation-delay: 0.4s;\n  }\n`;\n\nexport default () => (\n  <>\n    <Container>\n      <Line />\n      <Line />\n      <Line />\n      <Line />\n      <Line />\n    </Container>\n  </>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  position: absolute;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substr(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upComing, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"upComing Movies\">\n            {upComing.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" cotext={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"944358ef18593ebe8e031dfdc9b91615\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  collection: id => api.get(`collection/${id}`)\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`/tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\n// api.get(\"/tv/popular\"); ==> if you use \"/\" first part like this, it is overwrited on baseURL\n\n// api.get(\"tv/popular\");\n\nexport default api;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      // const nowPlaying = await moviesApi.nowPlaying(); **data.results deconstruction\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upComing }\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can`t find movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" cotext={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Netflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        ></Input>\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      {tvResults &&\n        movieResults &&\n        tvResults.length === 0 &&\n        movieResults.length === 0 && (\n          <Message text=\"Nothing Found\" color=\"#95a5a6\"></Message>\n        )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst HiddenRank = styled.div`\n  font-size: 15px;\n  padding: 20px 30px;\n  position: absolute;\n  background-color: rgba(0, 30, 50, 0.7);\n  border-radius: 5px;\n  z-index: 1;\n  font-weight: 600;\n  color: #b2bec3;\n  opacity: 0;\n  transition: all 0.5s ease-in-out;\n  font-style: italic;\n`;\n\nconst FullStar = styled.div`\n  padding: 0px 2px;\n  color: ${props => (props.star ? \"#0984e3\" : \"black\")};\n  opacity: ${props => (props.star ? 1 : 0.3)};\n`;\nconst StarState = styled.div`\n  display: flex;\n  padding: 0px 3px;\n`;\nconst StarRank = styled.div`\n  display: flex;\n  margin-left: 15px;\n  background-color: #b2bec3;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 4px;\n  border-radius: 5px;\n  &:hover {\n    ${FullStar} {\n      opacity: 0;\n    }\n    ${HiddenRank} {\n      opacity: 1;\n    }\n  }\n`;\nconst Rank = ({ vote_average }) =>\n  vote_average ? (\n    <>\n      <StarRank>\n        {Math.floor(vote_average / 2) <= 1 ? (\n          <>\n            <StarState>\n              <FullStar star={true}>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <HiddenRank>Rank : {vote_average} / 10</HiddenRank>\n            </StarState>\n          </>\n        ) : Math.floor(vote_average / 2) > 1 &&\n          Math.floor(vote_average / 2) <= 2 ? (\n          <>\n            <StarState>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <HiddenRank>Rank : {vote_average} / 10</HiddenRank>\n            </StarState>\n          </>\n        ) : Math.floor(vote_average / 2) > 2 &&\n          Math.floor(vote_average / 2) <= 3 ? (\n          <>\n            <StarState>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar>★</FullStar>\n              <FullStar>★</FullStar>\n              <HiddenRank>Rank : {vote_average} / 10</HiddenRank>\n            </StarState>\n          </>\n        ) : Math.floor(vote_average / 2) > 3 &&\n          Math.floor(vote_average / 2) <= 4 ? (\n          <>\n            <StarState>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar>★</FullStar>\n              <HiddenRank>Rank : {vote_average} / 10</HiddenRank>\n            </StarState>\n          </>\n        ) : (\n          <>\n            <StarState>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <FullStar star={true}>★</FullStar>\n              <HiddenRank>Rank : {vote_average} / 10</HiddenRank>\n            </StarState>\n          </>\n        )}\n      </StarRank>\n    </>\n  ) : null;\n\nRank.propTypes = {\n  vote_average: PropTypes.number.isRequired\n};\n\nexport default Rank;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst opacity = keyframes`\n  from {\n      opacity:0;\n  }\n  to{\n     \n    opacity: 1;\n  }\n\n`;\nconst Container = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  animation: ${opacity} 1.5s ease-in-out;\n`;\nconst VideoBox = styled.div`\n  font-size: 12px;\n  color: whitesmoke;\n  opacity: 0.8;\n`;\nconst GoUrl = styled.a`\n  display: flex;\n  align-items: center;\n`;\n\nconst DesignBox = styled.div``;\nconst DesignSpan = styled.span`\n  font-size: 20px;\n`;\n\nconst AwesomeBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 5px;\n  &:hover {\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    color: white;\n    border-radius: 5px;\n    padding: 3px;\n    transition: all 0.3s ease-in-out;\n  }\n`;\nconst Video = ({ videos, name }) => (\n  <>\n    <Container>\n      <GoUrl href={`http://youtube.com/watch?v=${videos}`} target=\"_blank\">\n        <AwesomeBox>\n          <DesignBox>\n            <DesignSpan>\n              <span role=\"img\" aria-label=\"videos\">\n                🍿\n              </span>\n            </DesignSpan>\n          </DesignBox>\n          <VideoBox>{name && name.length > 18 ? `${name}...` : name}</VideoBox>\n        </AwesomeBox>\n      </GoUrl>\n    </Container>\n  </>\n);\n\nVideo.propTypes = {\n  videos: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default Video;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Txt = styled.div`\n  text-align: center;\n  opacity: 1;\n  padding-top: 15px;\n`;\nconst TestBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  width: 110px;\n  height: 150px;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #b2bec3;\n  transform: translate(30px, -10px);\n  opacity: 0;\n  transition: all 1s linear;\n  line-height: 1.5;\n  z-index: 1;\n`;\n\nconst LogoBox = styled.div`\n  background: url(${props => props.logo}) center;\n  background-size: contain;\n  width: 80px;\n  border-radius: 20px;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n  margin-right: 20px;\n  &:hover {\n    ${BoxContainer} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Company = ({ logo_path, name, origin_country }) => (\n  <Container>\n    <TestBox>\n      <LogoBox\n        logo={\n          logo_path\n            ? `https://image.tmdb.org/t/p/w300${logo_path}`\n            : require(\"../assets/noPosterSmall.png\")\n        }\n      >\n        <BoxContainer>\n          <Txt>{name}</Txt>\n          {origin_country ? <Txt>Country : {origin_country}</Txt> : null}\n        </BoxContainer>\n      </LogoBox>\n    </TestBox>\n  </Container>\n);\n\nCompany.propTypes = {\n  logo_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  origin_country: PropTypes.string\n};\n\nexport default Company;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Txt = styled.div`\n  text-align: center;\n  opacity: 1;\n  padding-top: 40px;\n  color: gray;\n`;\nconst TestBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  width: 110px;\n  height: 150px;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #b2bec3;\n  transform: translate(30px, -10px);\n  opacity: 0;\n  transition: all 1s linear;\n  line-height: 1.5;\n  z-index: 1;\n`;\n\nconst PosterBox = styled.div`\n  width: 110px;\n  height: 150px;\n  background: url(${props => props.logo}) center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n`;\nconst Container = styled.div`\n  margin-right: 20px;\n  &:hover {\n    ${BoxContainer} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Collections = ({ id, name, poster_path }) => (\n  <Container>\n    <TestBox>\n      <PosterBox\n        logo={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : require(\"../assets/noPosterSmall.png\")\n        }\n      >\n        <BoxContainer>\n          <Txt>{name}</Txt>\n        </BoxContainer>\n      </PosterBox>\n    </TestBox>\n  </Container>\n);\nCollections.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  poster_path: PropTypes.string\n};\nexport default Collections;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Txt = styled.div`\n  text-align: center;\n  opacity: 1;\n  padding-top: 15px;\n`;\nconst TestBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  width: 110px;\n  height: 150px;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #b2bec3;\n  transform: translate(30px, -10px);\n  opacity: 0;\n  transition: all 1s linear;\n  line-height: 1.5;\n  z-index: 1;\n`;\n\nconst ProfileBox = styled.div`\n  background: url(${props => props.profile}) center;\n  background-size: cover;\n  height: 150px;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n`;\nconst Container = styled.div`\n  margin-right: 20px;\n  &:hover {\n    ${BoxContainer} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Profile = ({ credit_id, id, name, profile_path }) => (\n  <Container>\n    <TestBox>\n      <ProfileBox\n        profile={\n          profile_path && profile_path !== null\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : require(\"../assets/noPosterSmall.png\")\n        }\n      >\n        <BoxContainer>\n          <Txt>{name}</Txt>\n        </BoxContainer>\n      </ProfileBox>\n    </TestBox>\n  </Container>\n);\n\nProfile.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number\n};\n\nexport default Profile;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Txt = styled.div`\n  text-align: center;\n  opacity: 1;\n  padding-top: 15px;\n`;\nconst TestBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  width: 110px;\n  height: 150px;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #b2bec3;\n  transform: translate(30px, -10px);\n  opacity: 0;\n  transition: all 1s linear;\n  line-height: 1.5;\n  z-index: 1;\n`;\n\nconst SeriesBox = styled.div`\n  background: url(${props => props.profile}) center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n`;\nconst Container = styled.div`\n  margin-right: 20px;\n  &:hover {\n    ${BoxContainer} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst TVSeasons = ({ air_date, id, name, poster_path }) => (\n  <Container>\n    <TestBox>\n      <SeriesBox\n        profile={\n          poster_path && poster_path !== null\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : require(\"../assets/noPosterSmall.png\")\n        }\n      >\n        <BoxContainer>\n          <Txt>{name}</Txt>\n          <Txt>{air_date}</Txt>\n        </BoxContainer>\n      </SeriesBox>\n    </TestBox>\n  </Container>\n);\n\nTVSeasons.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number\n};\n\nexport default TVSeasons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Rank from \"Components/Rank\";\nimport Videos from \"Components/Videos\";\nimport Company from \"Components/Company\";\nimport Collections from \"Components/Collections\";\nimport Profile from \"Components/Profile\";\nimport TVSeasons from \"Components/TVSeasons\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 100px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 150%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 120%;\n`;\n\nconst Cover = styled.div`\n  width: 25%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 80%;\n  border-radius: 20px;\n  margin-right: 40px;\n  position: fixed;\n  right: 0;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  margin-top: 10px;\n  font-size: 14px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 85%;\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst IMDB = styled.div`\n  background-color: #e8b707;\n  font-size: 14px;\n  margin-left: 15px;\n  border-radius: 4px;\n  padding: 7px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 800;\n  color: black;\n  &:hover {\n    background-color: transparent;\n    border: 4px solid #e8b707;\n    color: white;\n  }\n`;\nconst DetailBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n`;\nconst CompanyBox = styled.div`\n  display: flex;\n  padding: 10px;\n  flex-wrap: wrap;\n  margin-right: 30px;\n`;\n\nconst CompanyTxt = styled.div`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.7);\n  border-bottom: 1.5px solid #b2bec3;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 10px;\n`;\n\n//refrence **\n\nconst ProductionCompanies = styled.ul`\n  width: 100%;\n  height: 130px;\n  overflow: auto;\n  white-space: nowrap;\n  margin: 20px 0;\n  border-radius: 5px;\n  &:last-child {\n    height: 280px;\n  }\n`;\n\nconst Production = styled.li`\n  display: inline-block;\n  margin: 20px;\n`;\n\nconst Seasons = ProductionCompanies;\nconst Season = Production;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Netflix</title>\n        <Loader />\n      </Helmet>\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Netflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Data>\n          <FlexContainer>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            {result.imdb_id ? (\n              <>\n                <IMDB>\n                  <a\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    IMDb\n                  </a>\n                </IMDB>\n              </>\n            ) : null}\n            <Rank {...result} />\n          </FlexContainer>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substr(0, 4)\n                : result.first_air_date.substr(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime\n                ? result.runtime\n                : result.runtime !== null\n                ? result.episode_run_time\n                : \"0\"}{\" \"}\n              min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <CompanyTxt>Overview</CompanyTxt>\n          <Overview>{result.overview}</Overview>\n          {result.videos.results.length !== 0 ? (\n            <>\n              <CompanyTxt>Teaser</CompanyTxt>\n              <Seasons>\n                <DetailBox>\n                  {result.videos.results.length !== 0\n                    ? result.videos.results.map(data => (\n                        <Season key={data.id}>\n                          <Videos\n                            key={data.id}\n                            videos={data.key}\n                            name={data.name}\n                          />\n                        </Season>\n                      ))\n                    : null}\n                </DetailBox>\n              </Seasons>\n            </>\n          ) : null}\n\n          {result.production_companies.length !== 0 ? (\n            <>\n              <CompanyTxt>Company</CompanyTxt>\n              <CompanyBox>\n                {result.production_companies.map(data => (\n                  <Company key={data.id} {...data} />\n                ))}\n              </CompanyBox>\n            </>\n          ) : null}\n          {result.belongs_to_collection &&\n          result.belongs_to_collection !== null ? (\n            <>\n              <CompanyTxt>\n                Collections\n                <Link to={`/collections/${result.belongs_to_collection.id}`}>\n                  <IMDB>More</IMDB>\n                </Link>\n              </CompanyTxt>\n\n              <CompanyBox>\n                <Collections {...result.belongs_to_collection} />\n              </CompanyBox>\n            </>\n          ) : null}\n          {result.created_by && result.created_by.length !== 0 ? (\n            <>\n              <CompanyTxt>Created by</CompanyTxt>\n              <CompanyBox>\n                {result.created_by.map(data => (\n                  <Profile\n                    key={data.credit_id}\n                    id={data.id}\n                    name={data.name}\n                    profile_path={data.profile_path}\n                  />\n                ))}\n              </CompanyBox>\n            </>\n          ) : null}\n          {result.seasons && result.seasons.length !== 0 ? (\n            <>\n              <CompanyTxt>Seasons</CompanyTxt>\n              <Seasons>\n                <CompanyBox>\n                  {result.seasons.map(data => (\n                    <Season key={data.id}>\n                      <TVSeasons\n                        key={data.id}\n                        air_date={data.air_date}\n                        id={data.id}\n                        name={data.name}\n                        poster_path={data.poster_path}\n                      />\n                    </Season>\n                  ))}\n                </CompanyBox>\n              </Seasons>\n            </>\n          ) : null}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DeatilContainer from \"./DetailContainer\";\nexport default DeatilContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      loading: true,\n      error: null,\n      result: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push(\"/\"); // ** return or not\n    }\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId)); //request data;\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n      console.log(result);\n    }\n  }\n\n  render() {\n    const { loading, error, result } = this.state;\n    return <DetailPresenter loading={loading} error={error} result={result} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 200px;\n  background-size: cover;\n  border-radius: 10px;\n  width: 110%;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n  margin-bottom: 15px;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  opacity: 0;\n  top: 100px;\n  left: 40px;\n  font-weight: bolder;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n  text-align: center;\n`;\n\nconst Year = styled.div`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n  text-align: center;\n`;\n\nconst CollectionPoster = ({\n  id,\n  imageUrl,\n  title,\n  year,\n  isMovie = false,\n  vote_average\n}) => (\n  <a\n    href={\n      isMovie\n        ? `/movie/${id}`\n        : imageUrl\n        ? `https://image.tmdb.org/t/p/original${imageUrl}`\n        : null\n    }\n  >\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : null}\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            {vote_average\n              ? `⭐️${vote_average}/10`\n              : imageUrl\n              ? \"Get Detail\"\n              : \" \"}\n          </span>\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </a>\n);\n\nCollectionPoster.propTypes = {\n  id: PropTypes.number,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default CollectionPoster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport CollectionPoster from \"Components/CollectionPoster\";\nimport Section from \"Components/Section\";\nconst opacity = keyframes`\n  from {\n      opacity:0;\n  }\n  to{\n    opacity: 1;\n  }\n\n`;\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 150px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 150%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 40%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 80vh;\n  border-radius: 15px;\n  margin-right: 50px;\n  animation: ${opacity} 2s ease-in-out;\n  margin-top: 100px;\n`;\n\nconst Data = styled.div`\n  width: 100%;\n  margin-left: 50px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst Overview = styled.p`\n  width: 100%;\n  margin-top: 10px;\n  font-size: 15px;\n  opacity: 0.7;\n  line-height: 1.5;\n  padding: 30px;\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n`;\n\nconst CompanyTxt = styled.div`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.7);\n  border-bottom: 1.5px solid #b2bec3;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Collection = ({\n  name,\n  poster_path,\n  overview,\n  backdrop_path,\n  test,\n  isMovie\n}) => (\n  <Container>\n    <Helmet>\n      <title> {name} | Collections</title>\n    </Helmet>\n    <Backdrop bgImage={`https://image.tmdb.org/t/p/original${backdrop_path}`} />\n    <Content>\n      <Cover\n        bgImage={\n          poster_path\n            ? `https://image.tmdb.org/t/p/original${poster_path}`\n            : require(\"../assets/noPosterSmall.png\")\n        }\n      />\n      <Data>\n        <FlexContainer>\n          <Title>{name}</Title>\n        </FlexContainer>\n        <CompanyTxt>Overview</CompanyTxt>\n        <Overview>{overview}</Overview>\n        <CompanyTxt>Enjoy Series</CompanyTxt>\n        <Section>\n          {test\n            ? test.map(data => (\n                <CollectionPoster\n                  key={data.id}\n                  id={data.id}\n                  imageUrl={data.poster_path}\n                  title={\n                    data.original_title && data.original_title.length > 20\n                      ? data.original_title.substr(0, 20) + \"...\"\n                      : data.original_title\n                  }\n                  year={data.release_date && data.release_date.substr(0, 4)}\n                  isMovie={true}\n                  vote_average={data.vote_average}\n                />\n              ))\n            : null}\n          <CollectionPoster />\n        </Section>\n        <CompanyTxt>Original Poster</CompanyTxt>\n        <Section>\n          <a href={`https://image.tmdb.org/t/p/original${poster_path}`}>\n            <CollectionPoster title={name} imageUrl={poster_path} />\n          </a>\n        </Section>\n      </Data>\n    </Content>\n  </Container>\n);\nCollection.propTypes = {\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n  overview: PropTypes.string,\n  backdrop_path: PropTypes.string,\n  test: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n      release_date: PropTypes.string\n    })\n  ),\n  isMovie: PropTypes.bool\n};\n\nexport default Collection;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport Collection from \"Components/Collection\";\n\nconst Conatiner = styled.div`\n  padding: 20px;\n`;\n\nconst CollectionsPresenter = ({ loading, collections }) => (\n  <>\n    <Helmet>\n      <title>Collections | Netflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Conatiner>\n        <Collection\n          name={collections.name}\n          poster_path={collections.poster_path}\n          overview={collections.overview}\n          backdrop_path={collections.backdrop_path}\n          test={collections.parts}\n        ></Collection>\n      </Conatiner>\n    )}\n  </>\n);\n\nCollectionsPresenter.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  id: PropTypes.number,\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n  vote_average: PropTypes.number,\n  release_date: PropTypes.string\n};\n\nexport default CollectionsPresenter;\n","import CollectionsContainer from \"./CollectionsContainer\";\nexport default CollectionsContainer;\n","import React from \"react\";\nimport CollectionsPresenter from \"./CollectionsPresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    loading: true,\n    collections: []\n  };\n  async getCollections() {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n\n    try {\n      const { data: collections } = await moviesApi.collection(id);\n      this.setState({ collections });\n      console.log(collections);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidMount() {\n    this.getCollections();\n  }\n\n  render() {\n    return <CollectionsPresenter {...this.state} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Collections from \"Routes/Collections\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        {/* <Route path=\"/tv/momo\" render={() => <h1>MOMO</h1>} /> */}\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/collections/:id\" component={Collections} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\n// export default ()=>createGlobalStyle``;\n\nconst globalStyles = createGlobalStyle` \n${reset};\na{\n    text-decoration:none;\n    color:inherit;\n}\n*{\n    box-sizing:border-box;\n\n}\nbody{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:15px;\n    background-color:rgba(20,20,20,1);\n    color:white;\n    padding-top:50px;\n    margin-left:10px;\n    height:100%;\n}`;\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}